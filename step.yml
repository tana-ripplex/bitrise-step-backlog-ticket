#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  backlog_ticket
summary: |
  write backlog ticket.
description: |
  write baclog ticket
website: https://github.com/tana-ripplex/bitrise-step-backlog-ticket
source_code_url: https://github.com/tana-ripplex/bitrise-step-backlog-ticket
support_url: https://github.com/tana-ripplex/bitrise-step-backlog-ticket/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  go:
    package_name: github.com/tana-ripplex/bitrise-step-backlog-ticket


inputs:
  - api_key: "backlogのAPIキーです"
    opts:
      title: "backlogのAPIキーです"
      is_sensitive: true
      is_expand: true
      is_required: true
  - space_name: "スペース名"
    opts:
      title: "backlogのスペース名(xxxx.backlog.jpのxxxx部分)"
      is_required: true
  - project_id: "プロジェクトID"
    opts:
      title: "backlogのプロジェクトIDです"
      is_required: true
  - title: "課題タイトル"
    opts:
      title: "課題のタイトルです"   
      is_required: true
  - title: "課題内容"
    opts:
      title: "課題の内容です"   
  - issue_type_id: "種別ID"
    opts:
      title: "課題の種別ID"
      is_required: true
  - priority_id: "優先度"
    opts:
      title: "課題の優先度"
      is_required: true
  - milestone_id: "マイルストーン"
    opts:
      title: "マイルストーン"
  - notified_user_id: "通知ユーザーID"
    opts:
      title: "お知らせユーザーID"


outputs:
  - ISSUE_ID:
    opts:
      title: "課題ID"
      summary: 作成した課題のID
      description: |
        作成した課題のIDです
  - ISSUE_URL:
    opts:
      title: "課題URL"
      summary: 作成した課題のURL
      description: |
        作成した課題のURLです